{
  "swagger": "2.0",
  "info": {
    "version": "2.0.0",
    "title": "Swagger API",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "localhost:8088",
  "basePath": "/ari",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/channels": {
      "get": {
        "description": "List all active channels in Asterisk.",
        "summary": "list",
        "operationId": "list",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Create a new channel (originate).",
        "summary": "originate",
        "operationId": "originate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Endpoint to call."
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The extension to dial after the endpoint answers. Mutually exclusive with 'app'."
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The context to dial after the endpoint answers. If omitted, uses 'default'. Mutually exclusive with 'app'."
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The priority to dial after the endpoint answers. If omitted, uses 1. Mutually exclusive with 'app'."
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The label to dial after the endpoint answers. Will supersede 'priority' if provided. Mutually exclusive with 'app'."
          },
          {
            "name": "app",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The application that is subscribed to the originated channel. When the channel is answered, it will be passed to this Stasis application. Mutually exclusive with 'context', 'extension', 'priority', and 'label'."
          },
          {
            "name": "appArgs",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The application arguments to pass to the Stasis application provided by 'app'. Mutually exclusive with 'context', 'extension', 'priority', and 'label'."
          },
          {
            "name": "callerId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "CallerID to use when dialing the endpoint or extension."
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "default": "30",
            "type": "string",
            "description": "Timeout (in seconds) before giving up dialing, or -1 for no timeout."
          },
          {
            "name": "variables",
            "in": "body",
            "required": false,
            "description": "The \"variables\" key in the body object holds variable key/value pairs to set on the channel on creation. Other keys in the body object are interpreted as query parameters. Ex. { \"endpoint\": \"SIP/Alice\", \"variables\": { \"CALLERID(name)\": \"Alice\" } }",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "channelId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique id to assign the channel on creation."
          },
          {
            "name": "otherChannelId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique id to assign the second channel when using local channels."
          },
          {
            "name": "originator",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique id of the channel which is originating this one."
          },
          {
            "name": "formats",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The format name capability list to use if originator is not specified. Ex. \"ulaw,slin16\".  Format names can be found with \"core show codecs\"."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Invalid parameters for originating a channel.",
            "schema": {}
          },
          "409": {
            "description": "Channel with given unique ID already exists.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/create": {
      "post": {
        "description": "Create channel.",
        "summary": "create",
        "operationId": "create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "endpoint",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Endpoint for channel communication"
          },
          {
            "name": "app",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Stasis Application to place channel into"
          },
          {
            "name": "appArgs",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The application arguments to pass to the Stasis application provided by 'app'. Mutually exclusive with 'context', 'extension', 'priority', and 'label'."
          },
          {
            "name": "channelId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique id to assign the channel on creation."
          },
          {
            "name": "otherChannelId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique id to assign the second channel when using local channels."
          },
          {
            "name": "originator",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Unique ID of the calling channel"
          },
          {
            "name": "formats",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The format name capability list to use if originator is not specified. Ex. \"ulaw,slin16\".  Format names can be found with \"core show codecs\"."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "409": {
            "description": "Channel with given unique ID already exists.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}": {
      "get": {
        "description": "Channel details.",
        "summary": "get",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {}
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Create a new channel (originate with id).",
        "summary": "originateWithId",
        "operationId": "originateWithId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The unique id to assign the channel on creation."
          },
          {
            "name": "endpoint",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Endpoint to call."
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The extension to dial after the endpoint answers. Mutually exclusive with 'app'."
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The context to dial after the endpoint answers. If omitted, uses 'default'. Mutually exclusive with 'app'."
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The priority to dial after the endpoint answers. If omitted, uses 1. Mutually exclusive with 'app'."
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The label to dial after the endpoint answers. Will supersede 'priority' if provided. Mutually exclusive with 'app'."
          },
          {
            "name": "app",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The application that is subscribed to the originated channel. When the channel is answered, it will be passed to this Stasis application. Mutually exclusive with 'context', 'extension', 'priority', and 'label'."
          },
          {
            "name": "appArgs",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The application arguments to pass to the Stasis application provided by 'app'. Mutually exclusive with 'context', 'extension', 'priority', and 'label'."
          },
          {
            "name": "callerId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "CallerID to use when dialing the endpoint or extension."
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "default": "30",
            "type": "string",
            "description": "Timeout (in seconds) before giving up dialing, or -1 for no timeout."
          },
          {
            "name": "variables",
            "in": "body",
            "required": false,
            "description": "The \"variables\" key in the body object holds variable key/value pairs to set on the channel on creation. Other keys in the body object are interpreted as query parameters. Ex. { \"endpoint\": \"SIP/Alice\", \"variables\": { \"CALLERID(name)\": \"Alice\" } }",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "otherChannelId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique id to assign the second channel when using local channels."
          },
          {
            "name": "originator",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The unique id of the channel which is originating this one."
          },
          {
            "name": "formats",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The format name capability list to use if originator is not specified. Ex. \"ulaw,slin16\".  Format names can be found with \"core show codecs\"."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Invalid parameters for originating a channel.",
            "schema": {}
          },
          "409": {
            "description": "Channel with given unique ID already exists.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete (i.e. hangup) a channel.",
        "summary": "hangup",
        "operationId": "hangup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "enum": [
              "normal",
              "busy",
              "congestion",
              "no_answer"
            ],
            "type": "string",
            "description": "Reason for hanging up the channel"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Invalid reason for hangup provided",
            "schema": {}
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/continue": {
      "post": {
        "description": "Exit application; continue execution in the dialplan.",
        "summary": "continueInDialplan",
        "operationId": "continueInDialplan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The context to continue to."
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The extension to continue to."
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The priority to continue to."
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The label to continue to - will supersede 'priority' if both are provided."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/redirect": {
      "post": {
        "description": "Redirect the channel to a different location.",
        "summary": "redirect",
        "operationId": "redirect",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "endpoint",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The endpoint to redirect the channel to"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Endpoint parameter not provided",
            "schema": {}
          },
          "404": {
            "description": "Channel or endpoint not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          },
          "422": {
            "description": "Endpoint is not the same type as the channel",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/answer": {
      "post": {
        "description": "Answer a channel.",
        "summary": "answer",
        "operationId": "answer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/ring": {
      "post": {
        "description": "Indicate ringing to a channel.",
        "summary": "ring",
        "operationId": "ring",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Stop ringing indication on a channel if locally generated.",
        "summary": "ringStop",
        "operationId": "ringStop",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/dtmf": {
      "post": {
        "description": "Send provided DTMF to a given channel.",
        "summary": "sendDTMF",
        "operationId": "sendDTMF",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "dtmf",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "DTMF To send."
          },
          {
            "name": "before",
            "in": "query",
            "required": false,
            "default": "0",
            "type": "string",
            "description": "Amount of time to wait before DTMF digits (specified in milliseconds) start."
          },
          {
            "name": "between",
            "in": "query",
            "required": false,
            "default": "100",
            "type": "string",
            "description": "Amount of time in between DTMF digits (specified in milliseconds)."
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "default": "100",
            "type": "string",
            "description": "Length of each DTMF digit (specified in milliseconds)."
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "default": "0",
            "type": "string",
            "description": "Amount of time to wait after DTMF digits (specified in milliseconds) end."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "DTMF is required",
            "schema": {}
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/mute": {
      "post": {
        "description": "Mute a channel.",
        "summary": "mute",
        "operationId": "mute",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "default": "both",
            "type": "string",
            "description": "Direction in which to mute audio (Acceptable values are: \"both\", \"in\", \"out\")"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Unmute a channel.",
        "summary": "unmute",
        "operationId": "unmute",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "direction",
            "in": "query",
            "required": false,
            "default": "both",
            "type": "string",
            "description": "Direction in which to unmute audio (Acceptable values are: \"both\", \"in\", \"out\")"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/hold": {
      "post": {
        "description": "Hold a channel.",
        "summary": "hold",
        "operationId": "hold",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Remove a channel from hold.",
        "summary": "unhold",
        "operationId": "unhold",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/moh": {
      "post": {
        "description": "Play music on hold to a channel.",
        "summary": "startMoh",
        "operationId": "startMoh",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "mohClass",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Music on hold class to use"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Stop playing music on hold to a channel.",
        "summary": "stopMoh",
        "operationId": "stopMoh",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/silence": {
      "post": {
        "description": "Play silence to a channel.",
        "summary": "startSilence",
        "operationId": "startSilence",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Stop playing silence to a channel.",
        "summary": "stopSilence",
        "operationId": "stopSilence",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/play": {
      "post": {
        "description": "Start playback of media.",
        "summary": "play",
        "operationId": "play",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "media",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Media URIs to play."
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "For sounds, selects language for sound."
          },
          {
            "name": "offsetms",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Number of milliseconds to skip before playing. Only applies to the first URI if multiple media URIs are specified."
          },
          {
            "name": "skipms",
            "in": "query",
            "required": false,
            "default": "3000",
            "type": "string",
            "description": "Number of milliseconds to skip for forward/reverse operations."
          },
          {
            "name": "playbackId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Playback ID."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/play/{playbackId}": {
      "post": {
        "description": "Start playback of media and specify the playbackId.",
        "summary": "playWithId",
        "operationId": "playWithId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "playbackId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Playback ID."
          },
          {
            "name": "media",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Media URIs to play."
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "For sounds, selects language for sound."
          },
          {
            "name": "offsetms",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Number of milliseconds to skip before playing. Only applies to the first URI if multiple media URIs are specified."
          },
          {
            "name": "skipms",
            "in": "query",
            "required": false,
            "default": "3000",
            "type": "string",
            "description": "Number of milliseconds to skip for forward/reverse operations."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          },
          "412": {
            "description": "Channel in invalid state",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/record": {
      "post": {
        "description": "Start a recording.",
        "summary": "record",
        "operationId": "record",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Recording's filename"
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Format to encode audio in"
          },
          {
            "name": "maxDurationSeconds",
            "in": "query",
            "required": false,
            "default": "0",
            "type": "string",
            "description": "Maximum duration of the recording, in seconds. 0 for no limit"
          },
          {
            "name": "maxSilenceSeconds",
            "in": "query",
            "required": false,
            "default": "0",
            "type": "string",
            "description": "Maximum duration of silence, in seconds. 0 for no limit"
          },
          {
            "name": "ifExists",
            "in": "query",
            "required": false,
            "enum": [
              "fail",
              "overwrite",
              "append"
            ],
            "default": "fail",
            "type": "string",
            "description": "Action to take if a recording with the same name already exists."
          },
          {
            "name": "beep",
            "in": "query",
            "required": false,
            "default": "False",
            "type": "string",
            "description": "Play beep when recording begins"
          },
          {
            "name": "terminateOn",
            "in": "query",
            "required": false,
            "default": "none",
            "type": "string",
            "description": "DTMF input to terminate recording (Acceptable values are: \"none\", \"any\", \"*\", \"#\")"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {}
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel is not in a Stasis application; the channel is currently bridged with other hcannels; A recording with the same name already exists on the system and can not be overwritten because it is in progress or ifExists=fail",
            "schema": {}
          },
          "422": {
            "description": "The format specified is unknown on this system",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/variable": {
      "get": {
        "description": "Get the value of a channel variable or function.",
        "summary": "getChannelVar",
        "operationId": "getChannelVar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "variable",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The channel variable or function to get"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object"
            },
            "examples": {}
          },
          "400": {
            "description": "Missing variable parameter.",
            "schema": {}
          },
          "404": {
            "description": "Channel or variable not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Set the value of a channel variable or function.",
        "summary": "setChannelVar",
        "operationId": "setChannelVar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "variable",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The channel variable or function to set"
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The value to set the variable to"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Missing variable parameter.",
            "schema": {}
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          },
          "409": {
            "description": "Channel not in a Stasis application",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/snoop": {
      "post": {
        "description": "Start snooping.",
        "summary": "snoopChannel",
        "operationId": "snoopChannel",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "app",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Application the snooping channel is placed into"
          },
          {
            "name": "spy",
            "in": "query",
            "required": false,
            "default": "none",
            "type": "string",
            "description": "Direction of audio to spy on (Acceptable values are: \"none\", \"both\", \"out\", \"in\")"
          },
          {
            "name": "whisper",
            "in": "query",
            "required": false,
            "default": "none",
            "type": "string",
            "description": "Direction of audio to whisper into (Acceptable values are: \"none\", \"both\", \"out\", \"in\")"
          },
          {
            "name": "appArgs",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The application arguments to pass to the Stasis application"
          },
          {
            "name": "snoopId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Unique ID to assign to snooping channel"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {}
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/snoop/{snoopId}": {
      "post": {
        "description": "Start snooping.",
        "summary": "snoopChannelWithId",
        "operationId": "snoopChannelWithId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "snoopId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique ID to assign to snooping channel"
          },
          {
            "name": "app",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Application the snooping channel is placed into"
          },
          {
            "name": "spy",
            "in": "query",
            "required": false,
            "default": "none",
            "type": "string",
            "description": "Direction of audio to spy on (Acceptable values are: \"none\", \"both\", \"out\", \"in\")"
          },
          {
            "name": "whisper",
            "in": "query",
            "required": false,
            "default": "none",
            "type": "string",
            "description": "Direction of audio to whisper into (Acceptable values are: \"none\", \"both\", \"out\", \"in\")"
          },
          {
            "name": "appArgs",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The application arguments to pass to the Stasis application"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "Invalid parameters",
            "schema": {}
          },
          "404": {
            "description": "Channel not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/channels/{channelId}/dial": {
      "post": {
        "description": "Dial a created channel.",
        "summary": "dial",
        "operationId": "dial",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Channel's id"
          },
          {
            "name": "caller",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Channel ID of caller"
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "default": "0",
            "type": "string",
            "description": "Dial timeout"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Channel cannot be found.",
            "schema": {}
          },
          "409": {
            "description": "Channel cannot be dialed.",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "Reason": {
      "title": "reason",
      "example": "normal",
      "type": "string",
      "enum": [
        "normal",
        "busy",
        "congestion",
        "no_answer"
      ]
    },
    "IfExists": {
      "title": "ifExists",
      "example": "fail",
      "type": "string",
      "enum": [
        "fail",
        "overwrite",
        "append"
      ]
    },
    "Dialed": {
      "title": "Dialed",
      "description": "Dialed channel information.",
      "type": "object"
    },
    "DialplanCEP": {
      "title": "DialplanCEP",
      "description": "Dialplan location (context/extension/priority)",
      "type": "object",
      "properties": {
        "context": {
          "description": "Context in the dialplan",
          "type": "string"
        },
        "exten": {
          "description": "Extension in the dialplan",
          "type": "string"
        },
        "priority": {
          "description": "Priority in the dialplan",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CallerID": {
      "title": "CallerID",
      "description": "Caller identification",
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        },
        "number": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Channel": {
      "title": "Channel",
      "description": "A specific communication connection between Asterisk and an Endpoint.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier of the channel.\n\nThis is the same as the Uniqueid field in AMI.",
          "type": "string"
        },
        "name": {
          "description": "Name of the channel (i.e. SIP/foo-0000a7e3)",
          "type": "string"
        },
        "state": {
          "description": "",
          "type": "string"
        },
        "caller": {
          "$ref": "#/definitions/CallerID"
        },
        "connected": {
          "$ref": "#/definitions/CallerID"
        },
        "accountcode": {
          "description": "",
          "type": "string"
        },
        "dialplan": {
          "$ref": "#/definitions/DialplanCEP"
        },
        "creationtime": {
          "description": "Timestamp when channel was created",
          "type": "string",
          "format": "date"
        },
        "language": {
          "description": "The default spoken language",
          "type": "string"
        },
        "channelvars": {
          "description": "Channel variables",
          "type": "object"
        }
      }
    }
  }
}